{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Christina\\\\Desktop\\\\React\\\\FED-medical\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../utils/useAuth';\n// We don't want the name 'Navbar' to conflict with the Mantine component of the same name\n// So we use an alias 'MantineNavbar' to refer to the Mantine component\nimport { Navbar as MantineNavbar, Button, Stack } from '@mantine/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const {\n    logout,\n    token\n  } = useAuth();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(MantineNavbar, {\n    width: {\n      base: 300\n    },\n    height: 500,\n    p: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), token && /*#__PURE__*/_jsxDEV(Button, {\n        color: \"red\",\n        variant: 'outline',\n        onClick: () => {\n          logout();\n          navigate('/login', {\n            replace: true\n          });\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"OXlYGTvM8MvyaKsF6NYOwCF/Pvg=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["Link","useNavigate","useAuth","Navbar","MantineNavbar","Button","Stack","jsxDEV","_jsxDEV","_s","logout","token","navigate","width","base","height","p","children","component","to","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onClick","replace","_c","$RefreshReg$"],"sources":["C:/Users/Christina/Desktop/React/FED-medical/src/components/Navbar.js"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../utils/useAuth';\r\n// We don't want the name 'Navbar' to conflict with the Mantine component of the same name\r\n// So we use an alias 'MantineNavbar' to refer to the Mantine component\r\nimport { Navbar as MantineNavbar, Button, Stack } from '@mantine/core';\r\n\r\nconst Navbar = () => {\r\n    const { logout, token } = useAuth();\r\n\r\n    const navigate = useNavigate();\r\n    return (\r\n        <MantineNavbar width={{ base: 300 }} height={500} p=\"xs\">\r\n            <Stack>\r\n                {/* \r\n                    Mantine has the notion of 'polymorphic' components. \r\n                    We can pass another component into this button to transform its root element form a button to a Link, but keep the styling of the button\r\n                    See another example in Home.js on line 48\r\n                    - Explained: https://dev.to/thexdev/polymorphic-component-2737\r\n                */}\r\n                <Button component={Link} to='/'>\r\n                    Home\r\n                </Button>\r\n\r\n                <Button component={Link} to='/register'>\r\n                    Register\r\n                </Button>\r\n\r\n                <Button component={Link} to='/login'>\r\n                    Login\r\n                </Button>\r\n\r\n                {/* Only displaying the logout button if we have a token (i.e, we are logged in) */}\r\n                {\r\n                    token && (\r\n                        <Button color='red' variant={'outline'} onClick={() => {\r\n                            logout();\r\n                            navigate('/login', { replace: true })\r\n                        }}>Logout</Button>\r\n                    )\r\n                }\r\n\r\n            </Stack>\r\n        </MantineNavbar >\r\n    );\r\n};\r\n\r\nexport default Navbar;"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,kBAAkB;AAC1C;AACA;AACA,SAASC,MAAM,IAAIC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAML,MAAM,GAAGA,CAAA,KAAM;EAAAM,EAAA;EACjB,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGT,OAAO,CAAC,CAAC;EAEnC,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,oBACIO,OAAA,CAACJ,aAAa;IAACS,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAI,CAAE;IAACC,MAAM,EAAE,GAAI;IAACC,CAAC,EAAC,IAAI;IAAAC,QAAA,eACpDT,OAAA,CAACF,KAAK;MAAAW,QAAA,gBAOFT,OAAA,CAACH,MAAM;QAACa,SAAS,EAAElB,IAAK;QAACmB,EAAE,EAAC,GAAG;QAAAF,QAAA,EAAC;MAEhC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETf,OAAA,CAACH,MAAM;QAACa,SAAS,EAAElB,IAAK;QAACmB,EAAE,EAAC,WAAW;QAAAF,QAAA,EAAC;MAExC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETf,OAAA,CAACH,MAAM;QAACa,SAAS,EAAElB,IAAK;QAACmB,EAAE,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAErC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAILZ,KAAK,iBACDH,OAAA,CAACH,MAAM;QAACmB,KAAK,EAAC,KAAK;QAACC,OAAO,EAAE,SAAU;QAACC,OAAO,EAAEA,CAAA,KAAM;UACnDhB,MAAM,CAAC,CAAC;UACRE,QAAQ,CAAC,QAAQ,EAAE;YAAEe,OAAO,EAAE;UAAK,CAAC,CAAC;QACzC,CAAE;QAAAV,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACpB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEzB,CAAC;AAACd,EAAA,CAtCIN,MAAM;EAAA,QACkBD,OAAO,EAEhBD,WAAW;AAAA;AAAA2B,EAAA,GAH1BzB,MAAM;AAwCZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}