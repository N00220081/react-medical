{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Christina\\\\Desktop\\\\React\\\\FED-medical\\\\src\\\\utils\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// create context, which will store some state\n// we don't bother exporting this, as we will only use it in this file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// inside our components, we could directly call useContext(AuthContext) to get the current value of the context\n// instead we just make this custom hook to make it easier to use\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// chidren is a special prop\n// it's like a placeholder for whatever JSX is going to be rendered inside this component\n// meaning we can call <AuthProvider> {some jsx goes here} </AuthProvider>\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  // on initial load, check if there is a token in local storage\n  // we're creating a state variable and setting its initial value using a function\n  // this would be just the same as initialising the state to null, then setting it in a useEffect\n  const [token, setToken] = useState(() => {\n    if (localStorage.getItem('token')) {\n      return localStorage.getItem('token');\n    } else {\n      return null;\n    }\n  });\n  const login = (email, password) => {\n    // do login stuff...\n    // set localStorage token\n    // set token in state\n    axios.post(`https://fed-medical-clinic-api.vercel.app/login`, {\n      email,\n      password\n    }).then(res => {\n      setToken(res.data.token);\n      localStorage.setItem(\"token\", res.data.token);\n    }).catch(err => {\n      console.error(err);\n      alert('Login failed');\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n  };\n  const value = {\n    token,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 12\n  }, this);\n};\n_s2(AuthProvider, \"J+8MYAVeeN7IU6kUiZAvMpJT2ZU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","token","setToken","localStorage","getItem","login","email","password","post","then","res","data","setItem","catch","err","console","error","alert","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Christina/Desktop/React/FED-medical/src/utils/useAuth.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\n\r\n// create context, which will store some state\r\n// we don't bother exporting this, as we will only use it in this file\r\nconst AuthContext = createContext();\r\n\r\n// inside our components, we could directly call useContext(AuthContext) to get the current value of the context\r\n// instead we just make this custom hook to make it easier to use\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n\r\n// chidren is a special prop\r\n// it's like a placeholder for whatever JSX is going to be rendered inside this component\r\n// meaning we can call <AuthProvider> {some jsx goes here} </AuthProvider>\r\nexport const AuthProvider = ({ children }) => {\r\n    // on initial load, check if there is a token in local storage\r\n    // we're creating a state variable and setting its initial value using a function\r\n    // this would be just the same as initialising the state to null, then setting it in a useEffect\r\n    const [token, setToken] = useState(() => {\r\n\r\n        if (localStorage.getItem('token')) {\r\n            return localStorage.getItem('token');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    });\r\n\r\n    const login = (email, password) => {\r\n        // do login stuff...\r\n        // set localStorage token\r\n        // set token in state\r\n        axios\r\n            .post(`https://fed-medical-clinic-api.vercel.app/login`, {\r\n                email,\r\n                password,\r\n            })\r\n            .then((res) => {\r\n                setToken(res.data.token);\r\n                localStorage.setItem(\"token\", res.data.token);\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                alert('Login failed')\r\n            });\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n    };\r\n\r\n    const value = {\r\n        token,\r\n        login,\r\n        logout,\r\n    };\r\n\r\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;;AAEnC;AACA;AACA,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,OAAOR,UAAU,CAACM,WAAW,CAAC;AAClC,CAAC;;AAED;AACA;AACA;AAAAE,EAAA,CANaD,OAAO;AAOpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IAErC,IAAIa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAC/B,OAAOD,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACxC,CAAC,MACI;MACD,OAAO,IAAI;IACf;EACJ,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC/B;IACA;IACA;IACAf,KAAK,CACAgB,IAAI,CAAC,iDAAiD,EAAE;MACrDF,KAAK;MACLC;IACJ,CAAC,CAAC,CACDE,IAAI,CAAEC,GAAG,IAAK;MACXR,QAAQ,CAACQ,GAAG,CAACC,IAAI,CAACV,KAAK,CAAC;MACxBE,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEF,GAAG,CAACC,IAAI,CAACV,KAAK,CAAC;IACjD,CAAC,CAAC,CACDY,KAAK,CAAEC,GAAG,IAAK;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBG,KAAK,CAAC,cAAc,CAAC;IACzB,CAAC,CAAC;EACV,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjBf,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;IAChCjB,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAMkB,KAAK,GAAG;IACVnB,KAAK;IACLI,KAAK;IACLa;EACJ,CAAC;EAED,oBAAOxB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArB,QAAA,EAAEA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAChF,CAAC;AAACzB,GAAA,CA7CWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}